@model projekt_net.Models.Shift
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@if (User.Identity?.Name == "admin@mail.com")
{

ViewData["Title"] = "Lägg till ledigt arbetspass";

<h1>@ViewData["Title"]</h1>
<hr />
    <div class="row">
        <div class="col-md-4">
            <form asp-action="Create">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Type" class="control-label"></label>
                    <input asp-for="Type" class="form-control" autocomplete="off" />
                    <span asp-validation-for="Type" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="From" class="control-label"></label>
                    <input asp-for="From" class="form-control" />
                    <span asp-validation-for="From" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="To" class="control-label"></label>
                    <input asp-for="To" class="form-control" />
                    <span asp-validation-for="To" class="text-danger"></span>
                </div>
                <br />
                <div class="form-group">
                    <input type="submit" value="Lägg till" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>
}
else if (SignInManager.IsSignedIn(User))
{
    ViewData["Title"] = "Byta/ sjuka dig från arbetspass";

    <h1>@ViewData["Title"]</h1>
    <hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Type" class="control-label"></label>
                <input asp-for="Type" class="form-control" autocomplete="off" />
                <span asp-validation-for="Type" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="From" class="control-label"></label>
                <input asp-for="From" class="form-control" />
                <span asp-validation-for="From" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="To" class="control-label"></label>
                <input asp-for="To" class="form-control" />
                <span asp-validation-for="To" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Available" /> @Html.DisplayNameFor(model => model.Available)
                </label>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Sick" /> @Html.DisplayNameFor(model => model.Sick)
                </label>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Change" /> @Html.DisplayNameFor(model => model.Change)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="User_Id" class="control-label"></label>
                <input asp-for="User_Id" class="form-control" />
                <span asp-validation-for="User_Id" class="text-danger"></span>
            </div>
            <br />
            <div class="form-group">
                <input type="submit" value="Lägg till" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>
}
<br />
<div>
    <a asp-action="Index">Se alla lediga pass</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
